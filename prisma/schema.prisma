generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  email       String        @unique
  password    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now())
  cards       Cards[]
  credentials Credential[]
  secureNotes SecureNotes[]
  sessions    Session[]

  @@map("users")
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String
  createdAt DateTime @default(now())
  users     User     @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model Credential {
  id        Int      @id @default(autoincrement())
  userId    Int
  title     String   @unique
  url       String
  password  String
  createdAt DateTime @default(now())
  users     User     @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("credentials")
}

model SecureNotes {
  id          Int      @id @default(autoincrement())
  userId      Int
  title       String
  contentNote String
  createdAt   DateTime @default(now())
  users       User     @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("secureNotes")
}

model Cards {
  id         Int      @id @default(autoincrement())
  userId     Int
  title      String
  number     String
  cvc        String
  password   String
  expiration String
  isVirtual  Boolean
  createdAt  DateTime @default(now())
  name       String
  users      User     @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("cards")
}
